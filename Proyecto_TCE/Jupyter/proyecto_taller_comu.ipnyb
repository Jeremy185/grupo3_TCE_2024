{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Jeremy185/grupo3_TCE_2024/blob/main/Proyecto_TCE/Jupyter/proyecto_taller_comu.ipnyb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Modulo de transmisor\n",
        "\n"
      ],
      "metadata": {
        "id": "69gqO8bz9LJ6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "En este apartado se resume el desarrollo del transmisor, el cual tiene la capacidad de capturar la informacion de latidos por minuto (bpm) que provienen de un monitor de ritmo cardiaco, los datos son tomados mediante un protocolo de comunicacion UART."
      ],
      "metadata": {
        "id": "EnsHwNQ1BxeQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bloque Latidos por minuto/Prueba Ecostress\n"
      ],
      "metadata": {
        "id": "k8BB7RnE9s_O"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Este bloque tiene como objetivo modelar la adquisicion de datos entre el monitor cardiaco y el transmisor (TX)"
      ],
      "metadata": {
        "id": "5YqqBThzCSrY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from scipy.stats import anderson\n",
        "\n",
        "# Leer el archivo Excel\n",
        "df = pd.read_excel('/content/Dataset.xlsx')\n",
        "df1 = pd.read_excel('/content/Dataset_Crudo.xlsx')\n",
        "\n",
        "# Extraer la columna relevante\n",
        "data = df['BPM']\n",
        "data2 = df1['BPM']\n",
        "\n",
        "# Realizar la prueba de Anderson-Darling\n",
        "result = anderson(data)\n",
        "\n",
        "# Imprimir los resultados\n",
        "print('p-value:', result[1])\n",
        "print('Standard deviation:', data.std())\n",
        "print('Average:', data.mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bRlB24fNCSGZ",
        "outputId": "03e6b59f-720c-49c2-89a2-9e1bf8511c87"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "p-value: [0.559 0.637 0.764 0.891 1.06 ]\n",
            "Standard deviation: 19.72707993812042\n",
            "Average: 129.15458577437957\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Los valores p obtenidos de la prueba de Anderson-Darling son mayores que 0.05 (niveles típicos de significancia). Esto sugiere que no hay suficiente evidencia para rechazar la hipótesis nula de que los datos de latidos por minuto (bpm) siguen una distribución normal. Ademas, se tiene un promedio de 129.15 bpm y una desviación estándar de 19.73 bpm."
      ],
      "metadata": {
        "id": "xF021y5KOdGQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "A continuación, se crea un histograma con los datos analizados."
      ],
      "metadata": {
        "id": "s7nQaZhWPcb0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: haz un histograma de los datos de excel\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.hist(data, bins=20)\n",
        "plt.xlabel('Latidos por minuto (bpm)')\n",
        "plt.ylabel('Frecuencia')\n",
        "plt.title('Histograma de datos de latidos por minuto')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "1YTOwYADPslJ",
        "outputId": "66f2f922-c96f-47de-aa0f-26be4c9e51ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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WbNUs2ZNdenSRe7u7vrvf/+rfv36KTU1Vf3795ckTZs2TQMGDFCRIkX01ltvSZKCgoIyXefHH3+svn37qmnTpho0aJCOHj2qLl26qHjx4ipbtqxjvitXrqhVq1b67bff9MorrygsLEwLFixQz549FRMTo1dffVXS9dd+jx491LZtW02aNEmSdPDgQW3YsMExT1Y+++wzXbp0Sf3799fVq1c1ffp0tWnTRnv37nX0Y9WqVerYsaMqVKigMWPG6MqVK5oxY4aaNWumHTt2pDt+Gb1HszJgwAAFBwdr7Nix+uWXXzRnzhz5+/tr48aNKleunCZMmKAffvhBkydPVq1atfT8889nu87u3bsrLCxMkZGR2rFjhz766CMFBgY69lFOPf744zp8+LC++uorTZ06VSVLlpQkBQQESJJ69+6tefPm6YknntCQIUO0efNmRUZG6uDBg5kGbuSQwT1t7ty5RlKWj5o1azotU758eRMeHu54XqdOHdOpU6cst9O/f3+T0ctt8eLFRpIZP368U/sTTzxhbDab+e2334wxxmzfvt1IMoMGDXKar2fPnkaSGT16tKNt9OjRRpLp0aNHuu1dvnw5XdtXX31lJJn169enW0efPn0cbcnJyaZMmTLGZrOZiRMnOtovXrxovL29nfZJcnKySUxMdNrOxYsXTVBQkHnhhRfS1XCjs2fPGk9PT9OpUyeTmprqaH/zzTeNJKftjBs3zvj4+JjDhw87rWP48OHGzc3N/PHHH/mynatXr5qUlBSn5aOioozdbjdvv/22o23r1q1Gkpk7d67TvNeuXTOBgYGmVq1a5sqVK47277//3kgyo0aNMsZc30eSzOTJkzPfQZmoW7euCQkJMTExMY62FStWGEmmfPnyjraffvrJSDJffvml0/LLli3LsP1maa+NG2X0uurQoYOpUKGCU1vNmjVNy5Yt0827Zs0aI8msWbPGGPO//VW3bl2n19GcOXOMJKd1TJs2zUgyX3zxhaPt2rVrpkmTJqZIkSImLi7OGGPMq6++aooWLWqSk5Oz7N/NoqKijCTj7e1t/vzzT0f75s2bjSQzePBgR1vdunVNYGCgOX/+vKNt9+7dplChQub55593tGX1Hs1I2udUhw4dnF6rTZo0MTabzbz00kuOtrT36c37ObPPiZvfj4899pgpUaJEuv7f/JrOaJ2TJ082kkxU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1ukHhTNy1weZtMtJRYsWJcgAAGAx2Q0LYbAvAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLJcGmfXr16tz584qVaqUbDabFi9e7JiWlJSkYcOGqXbt2vLx8VGpUqX0/PPP69SpU64rGAAAFCguDTIJCQmqU6eOZs6cmW7a5cuXtWPHDo0cOVI7duzQN998o0OHDqlLly4uqBQAABRENmOMcXUR0vUfhVq0aJG6deuW6Txbt25Vo0aNdPz4cZUrVy5H642Li5Ofn59iY2P50UgAACwip3+/LTVGJjY2VjabTf7+/q4uBQAAFADuri4gp65evaphw4apR48eWSazxMREJSYmOp7HxcXdifIAAIALWCLIJCUlqXv37jLGaNasWVnOGxkZqbFjx96hygC4WujwJbdlvccmdrot6wWQvwr8paW0EHP8+HGtXLky23EuI0aMUGxsrONx4sSJO1QpAAC40wr0GZm0EHPkyBGtWbNGJUqUyHYZu90uu91+B6oDAACu5tIgEx8fr99++83xPCoqSrt27VLx4sUVEhKiJ554Qjt27ND333+vlJQURUdHS5KKFy8uT09PV5UNAAAKCJcGmW3btql169aO56+99pokKTw8XGPGjNF3330nSapbt67TcmvWrFGrVq3uVJkAAKCAcmmQadWqlbL6GpsC8hU3AACggCrwg30BAAAyQ5ABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACWRZABAACW5e7qAgCgIAodvuS2rfvYxE63bd3AvYYzMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLIIMgAAwLJcGmTWr1+vzp07q1SpUrLZbFq8eLHTdGOMRo0apZCQEHl7e6tdu3Y6cuSIa4oFAAAFjkuDTEJCgurUqaOZM2dmOP3dd9/V3//+d82ePVubN2+Wj4+POnTooKtXr97hSgEAQEHk7sqNd+zYUR07dsxwmjFG06ZN0//93/+pa9eukqTPPvtMQUFBWrx4sZ5++uk7WSoAACiACuwYmaioKEVHR6tdu3aONj8/PzVu3FibNm3KdLnExETFxcU5PQAAwN3JpWdkshIdHS1JCgoKcmoPCgpyTMtIZGSkxo4de1trA+5WocOX3Jb1HpvY6basFwAK7BmZvBoxYoRiY2MdjxMnTri6JAAAcJsU2CATHBwsSTpz5oxT+5kzZxzTMmK321W0aFGnBwAAuDsV2CATFham4OBgrV692tEWFxenzZs3q0mTJi6sDAAAFBQuHSMTHx+v3377zfE8KipKu3btUvHixVWuXDkNGjRI48ePV+XKlRUWFqaRI0eqVKlS6tatm+uKBgAABYZLg8y2bdvUunVrx/PXXntNkhQeHq5PP/1Ub7zxhhISEtSnTx/FxMSoefPmWrZsmby8vFxVMgAAKEBcGmRatWolY0ym0202m95++229/fbbd7AqAABgFQV2jAwAAEB2CDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCyCDIAAMCy3F1dAIC7X+jwJa4uAcBdijMyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsggyAADAsgp0kElJSdHIkSMVFhYmb29vVaxYUePGjZMxxtWlAQCAAsDd1QVkZdKkSZo1a5bmzZunmjVratu2bYqIiJCfn58GDhzo6vIAAICLFeggs3HjRnXt2lWdOnWSJIWGhuqrr77Sli1bXFwZAAAoCAr0paWmTZtq9erVOnz4sCRp9+7d+vnnn9WxY8dMl0lMTFRcXJzTAwAA3J0K9BmZ4cOHKy4uTtWqVZObm5tS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U1v16tX1n//8J9NlRowYoddee83xPC4uTmXLls23mgAAQMGRpyDz448/OgWZQoUKKSAgQJUqVZK7e56/miadZs2a6dChQ05thw8fVvny5TNdxm63y26351sNAACg4MpT6mjVqlU+l5GxwYMHq2nTppowYYK6d++uLVu2aM6cOZozZ84d2T4AACjY8jTYNzIyUp988km69k8++USTJk265aLSNGzYUIsWLdJXX32lWrVqady4cZo2bZqeeeaZfNsGAACwrjwFmQ8++EDVqlVL116zZk3Nnj37lou60aOPPqq9e/fq6tWrOnjwILdeAwAAhzwFmejoaIWEhKRrDwgI0OnTp2+5KAAAgJzIU5ApW7asNmzYkK59w4YNKlWq1C0XBQAAkBN5Guz74osvatCgQUpKSlKbNm0kSatXr9Ybb7yhIUOG5GuBAAAAmclTkBk6dKjOnz+vfv366dq1a5IkLy8vDRs2TCNGjMjXAgEAADKTpyBjs9k0adIkjRw5UgcPHpS3t7cqV67M97cAAIA76pZ+ayk6OloXLlxQxYoVZbfbZYzJr7oAAACylacgc/78ebVt21ZVqlTRI4884rhTqVevXoyRAQAAd0yegszgwYPl4eGhP/74Q4ULF3a0P/XUU1q2bFm+FQcAAJCVPI2RWbFihZYvX64yZco4tVeuXFnHjx/Pl8IAAACyk6czMgkJCU5nYtJcuHCBAb8AAOCOyVOQadGihT777DPHc5vNptTUVL377rtq3bp1vhUHAACQlTxdWnr33XfVtm1bbdu2TdeuXdMbb7yh/fv368KFCxl+4y8AAMDtkKczMrVq1dLhw4fVvHlzde3aVQkJCXr88ce1c+dOVaxYMb9rBAAAyFCuz8gkJSXp4Ycf1uzZs/XWW2/djpoAAAByJNdnZDw8PLRnz57bUQsAAECu5OnS0rPPPquPP/44v2sBAADIlTwN9k1OTtYnn3yiVatWqX79+vLx8XGaPmXKlHwpDgAAICu5CjJHjx5VaGio9u3bp/vvv1+SdPjwYad5bDZb/lUHAACQhVwFmcqVK+v06dNas2aNpOs/SfD3v/9dQUFBt6U4AACArORqjMzNv269dOlSJSQk5GtBAAAAOZWnwb5pbg42AAAAd1KugozNZks3BoYxMQAAwFVyNUbGGKOePXs6fhjy6tWreumll9LdtfTNN9/kX4UAAACZyFWQCQ8Pd3r+7LPP5msxsLbQ4UtcXcI9gf2Muw2v6f9hX+ReroLM3Llzb1cdAAAAuXZLg30BAABciSADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsy1JBZuLEibLZbBo0aJCrSwEAAAWAZYLM1q1b9cEHH+i+++5zdSkAAKCAsESQiY+P1zPPPKMPP/xQxYoVc3U5AACggLBEkOnfv786deqkdu3aZTtvYmKi4uLinB4AAODu5O7qArLz9ddfa8eOHdq6dWuO5o+MjNTYsWNvc1W3X+jwJbdt3ccmdrpt6waQvdv5/gbuNQX6jMyJEyf06quv6ssvv5SXl1eOlhkxYoRiY2MdjxMnTtzmKgEAgKsU6DMy27dv19mzZ3X//fc72lJSUrR+/Xr94x//UGJiotzc3JyWsdvtstvtd7pUAADgAgU6yLRt21Z79+51aouIiFC1atU0bNiwdCEGAADcWwp0kPH19VWtWrWc2nx8fFSiRIl07QAA4N5ToMfIAAAAZKVAn5HJyNq1a11dAgAAKCA4IwMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACyLIAMAACzL3dUFAHer0OFLXF0CANz1OCMDAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsiyADAAAsq0AHmcjISDVs2FC+vr4KDAxUt27ddOjQIVeXBQAACogCHWTWrVun/v3765dfftHKlSuVlJSk9u3bKyEhwdWlAQCAAsDd1QVkZdmyZU7PP/30UwUGBmr79u168MEHXVQVAAAoKAp0kLlZbGysJKl48eKZzpOYmKjExETH87i4uNteFwAAcA3LBJnU1FQNGjRIzZo1U61atTKdLzIyUmPHjr2DlVlP6PAlri4BAIB8UaDHyNyof//+2rdvn77++uss5xsxYoRiY2MdjxMnTtyhCgEAwJ1miTMyr7zyir7//nutX79eZcqUyXJeu90uu91+hyoDAACuVKCDjDFGAwYM0KJFi7R27VqFhYW5uiQAAFCAFOgg079/f/3rX//St99+K19fX0VHR0uS/Pz85O3t7eLqAACAqxXoMTKzZs1SbGysWrVqpZCQEMdj/vz5ri4NAAAUAAX6jIwxxtUlAACAAqxAn5EBAADICkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYFkEGAABYliWCzMyZMxUaGiovLy81btxYW7ZscXVJAACgACjwQWb+/Pl67bXXNHr0aO3YsUN16tRRhw4ddPbsWVeXBgAAXKzAB5kpU6boxRdfVEREhGrUqKHZs2ercOHC+uSTT1xdGgAAcLECHWSuXbum7du3q127do62QoUKqV27dtq0aZMLKwMAAAWBu6sLyMq5c+eUkpKioKAgp/agoCD9+uuvGS6TmJioxMREx/PY2FhJUlxcXL7Xl5p4Od/XCQCAldyOv683rtcYk+V8BTrI5EVkZKTGjh2brr1s2bIuqAYAgLub37Tbu/5Lly7Jz88v0+kFOsiULFlSbm5uOnPmjFP7mTNnFBwcnOEyI0aM0GuvveZ4npqaqgsXLqhEiRKy2Wy3XFNcXJzKli2rEydOqGjRore8voLuXuuvRJ/vhT7fa/2V7r0+32v9le6+PhtjdOnSJZUqVSrL+Qp0kPH09FT9+vW1evVqdevWTdL1YLJ69Wq98sorGS5jt9tlt9ud2vz9/fO9tqJFi94VL5Scutf6K9Hne8G91l/p3uvzvdZf6e7qc1ZnYtIU6CAjSa+99prCw8PVoEEDNWrUSNOmTVNCQoIiIiJcXRoAAHCxAh9knnrqKf31118aNWqUoqOjVbduXS1btizdAGAAAHDvKfBBRpJeeeWVTC8l3Wl2u12jR49Od/nqbnWv9Veiz/eCe62/0r3X53utv9K92WdJspns7msCAAAooAr0F+IBAABkhSADAAAsiyADAAAsiyADAAAsiyCTiUuXLmnQoEEqX768vL291bRpU23dutUx3RijUaNGKSQkRN7e3mrXrp2OHDniwopzZ/369ercubNKlSolm82mxYsXO03PSf8uXLigZ555RkWLFpW/v7969eql+Pj4O9iLnMuuv998843at2/v+AboXbt2pVvH1atX1b9/f5UoUUJFihTR3/72t3TfOl2QZNXnpKQkDRs2TLVr15aPj49KlSql559/XqdOnXJah5WOsZT9cR4zZoyqVasmHx8fFStWTO3atdPmzZud5rFSn7Pr741eeukl2Ww2TZs2zandSv2Vsu9zz549ZbPZnB4PP/yw0zxW6nNOjvHBgwfVpUsX+fn5ycfHRw0bNtQff/zhmG61z67cIshkonfv3lq5cqU+//xz7d27V+3bt1e7du108uRJSdK7776rv//975o9e7Y2b94sHx8fdejQQVevXnVx5TmTkJCgOnXqaObMmRlOz0n/nnnmGe3fv18rV67U999/r/Xr16tPnz53qgu5kl1/ExIS1Lx5c02aNCnTdQwePFj//e9/tWDBAq1bt06nTp3S448/frtKvmVZ9fny5cvasWOHRo4cqR07duibb77RoUOH1KVLF6f5rHSMpeyPc5UqVfSPf/xDe/fu1c8//6zQ0FC1b99ef/31l2MeK/U5u/6mWbRokX755ZcMv+rdSv2Vctbnhx9+WKdPn3Y8vvrqK6fpVupzdv39/fff1bx5c1WrVk1r167Vnj17NHLkSHl5eTnmsdpnV64ZpHP58mXj5uZmvv/+e6f2+++/37z11lsmNTXVBAcHm8mTJzumxcTEGLvdbr766qs7Xe4tk2QWLVrkeJ6T/h04cMBIMlu3bnXMs3TpUmOz2czJkyfvWO15cXN/bxQVFWUkmZ07dzq1x8TEGA8PD7NgwQJH28GDB40ks2nTpttYbf7Iqs9ptmzZYiSZ48ePG2OsfYyNyVmfY2NjjSSzatUqY4y1+5xZf//8809TunRps2/fPlO+fHkzdepUxzQr99eYjPscHh5uunbtmukyVu5zRv196qmnzLPPPpvpMlb/7MoJzshkIDk5WSkpKU6JVpK8vb31888/KyoqStHR0WrXrp1jmp+fnxo3bqxNmzbd6XLzXU76t2nTJvn7+6tBgwaOedq1a6dChQqlO1V/N9i+fbuSkpKc9km1atVUrly5u+KYS1JsbKxsNpvjt8nu9mN87do1zZkzR35+fqpTp46ku6/Pqampeu655zR06FDVrFkz3fS7rb9p1q5dq8DAQFWtWlUvv/yyzp8/75h2N/U5NTVVS5YsUZUqVdShQwcFBgaqcePGTpef7oXPLoJMBnx9fdWkSRONGzdOp06dUkpKir744gtt2rRJp0+fVnR0tCSl+5mEoKAgxzQry0n/oqOjFRgY6DTd3d1dxYsXvyv2wc2io6Pl6emZ7gdI75ZjfvXqVQ0bNkw9evRw/Njc3XqMv//+exUpUkReXl6aOnWqVq5cqZIlS0q6+/o8adIkubu7a+DAgRlOv9v6K12/rPTZZ59p9erVmjRpktatW6eOHTsqJSVF0t3V57Nnzyo+Pl4TJ07Uww8/rBUrVuixxx7T448/rnXr1km6+z+7JIv8RIErfP7553rhhRdUunRpubm56f7771ePHj20fft2V5cG5KukpCR1795dxhjNmjXL1eXcdq1bt9auXbt07tw5ffjhh+revbs2b96c7o+b1W3fvl3Tp0/Xjh07ZLPZXF3OHfP00087/r927dq67777VLFiRa1du1Zt27Z1YWX5LzU1VZLUtWtXDR48WJJUt25dbdy4UbNnz1bLli1dWd4dwxmZTFSsWFHr1q1TfHy8Tpw4oS1btigpKUkVKlRQcHCwJKUb9X3mzBnHNCvLSf+Cg4N19uxZp+nJycm6cOHCXbEPbhYcHKxr164pJibGqd3qxzwtxBw/flwrV650nI2R7t5j7OPjo0qVKumBBx7Qxx9/LHd3d3388ceS7q4+//TTTzp79qzKlSsnd3d3ubu76/jx4xoyZIhCQ0Ml3V39zUyFChVUsmRJ/fbbb5Lurj6XLFlS7u7uqlGjhlN79erVHXct3a2fXTciyGTDx8dHISEhunjxopYvX66uXbsqLCxMwcHBWr16tWO+uLg4bd68WU2aNHFhtfkjJ/1r0qSJYmJinM5Q/fjjj0pNTVXjxo3veM23W/369eXh4eG0Tw4dOqQ//vjDssc8LcQcOXJEq1atUokSJZym3yvHODU1VYmJiZLurj4/99xz2rNnj3bt2uV4lCpVSkOHDtXy5csl3V39zcyff/6p8+fPKyQkRNLd1WdPT081bNhQhw4dcmo/fPiwypcvL+nu/OxKx9WjjQuqZcuWmaVLl5qjR4+aFStWmDp16pjGjRuba9euGWOMmThxovH39zfffvut2bNnj+natasJCwszV65ccXHlOXPp0iWzc+dOs3PnTiPJTJkyxezcudNxx0pO+vfwww+bevXqmc2bN5uff/7ZVK5c2fTo0cNVXcpSdv09f/682blzp1myZImRZL7++muzc+dOc/r0acc6XnrpJVOuXDnz448/mm3btpkmTZqYJk2auKpL2cqqz9euXTNdunQxZcqUMbt27TKnT592PBITEx3rsNIxNibrPsfHx5sRI0aYTZs2mWPHjplt27aZiIgIY7fbzb59+xzrsFKfs3td3+zmu5aMsVZ/jcm6z5cuXTKvv/662bRpk4mKijKrVq0y999/v6lcubK5evWqYx1W6nN2x/ibb74xHh4eZs6cOebIkSNmxowZxs3Nzfz000+OdVjtsyu3CDKZmD9/vqlQoYLx9PQ0wcHBpn///iYmJsYxPTU11YwcOdIEBQUZu91u2rZtaw4dOuTCinNnzZo1RlK6R3h4uDEmZ/07f/686dGjhylSpIgpWrSoiYiIMJcuXXJBb7KXXX/nzp2b4fTRo0c71nHlyhXTr18/U6xYMVO4cGHz2GOPOQWdgiarPqfdZp7RY82aNY51WOkYG5N1n69cuWIee+wxU6pUKePp6WlCQkJMly5dzJYtW5zWYaU+Z/e6vllGQcZK/TUm6z5fvnzZtG/f3gQEBBgPDw9Tvnx58+KLL5ro6GindVipzzk5xh9//LGpVKmS8fLyMnXq1DGLFy92WofVPrtyy2aMMfl5hgcAAOBOYYwMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMAACwLIIMYFGhoaGaNm1alvPYbDYtXrz4jtRTEB07dkw2m027du1ydSlZeu655zRhwgTH85wc29tl+PDh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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "En el histograma anterior se puede apreciar que los datos muestran una distribucion de asimetría negativa."
      ],
      "metadata": {
        "id": "73j-opIVQnyr"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora, se crea una grafica de caja con el fin de identificar valores atipicos, ademas tambien se implementara el test de Grubbs."
      ],
      "metadata": {
        "id": "xIBjNe3CRuG5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "from scipy.stats import zscore\n",
        "from scipy.stats import t\n",
        "import numpy as np\n",
        "\n",
        "# Especifica la ruta al archivo de Excel en tu Google Drive\n",
        "ruta_archivo_excel = '/content/Dataset.xlsx'\n",
        "\n",
        "# Lee el archivo de Excel en un DataFrame de Pandas\n",
        "datos = pd.read_excel(ruta_archivo_excel, usecols=['BPM'])\n",
        "\n",
        "# Genera el gráfico de caja (box plot)\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.boxplot(datos['BPM'])\n",
        "plt.title('Gráfico de Caja para Detectar Datos Atípicos en la Columna BPM')\n",
        "plt.ylabel('Pulsaciones por Minuto (bpm)')\n",
        "plt.show()\n",
        "\n",
        "\n",
        "\n",
        "def test_grubbs(data, alpha=0.05):\n",
        "    \"\"\"\n",
        "    Test de Grubbs para identificar valores atípicos en un conjunto de datos univariado.\n",
        "\n",
        "    Parámetros:\n",
        "    data (array): Array de numpy que contiene los datos.\n",
        "    alpha (float): Nivel de significancia para el test (valor por defecto es 0.05).\n",
        "\n",
        "    Retorna:\n",
        "    array: Array que contiene los valores atípicos identificados por el test de Grubbs.\n",
        "    \"\"\"\n",
        "    n = len(data)\n",
        "    mean = np.mean(data)\n",
        "    std_dev = np.std(data, ddof=1)\n",
        "    data_abs = np.abs(data - mean)\n",
        "    max_index = np.argmax(data_abs)\n",
        "    max_deviation = data_abs[max_index]\n",
        "    critical_value = (n - 1) / np.sqrt(n) * np.sqrt(t.ppf(1 - alpha / (2 * n), n - 2) ** 2 / (n - 2 + t.ppf(1 - alpha / (2 * n), n - 2) ** 2))\n",
        "\n",
        "    if max_deviation > critical_value * std_dev:\n",
        "        return np.array([data[max_index]])\n",
        "    else:\n",
        "        return np.array([])\n",
        "\n",
        "# Usar el test de Grubbs para identificar valores atípicos en la columna 'bpm'\n",
        "valores_atipicos_grubbs = test_grubbs(datos['BPM'])\n",
        "\n",
        "# Imprimir los valores atípicos identificados\n",
        "print(\"Valores atípicos identificados con el test de Grubbs:\")\n",
        "print(valores_atipicos_grubbs)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 581
        },
        "id": "WwunyQaiR7fk",
        "outputId": "1f685ed4-77d7-4e18-c101-ea4196d77e24"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valores atípicos identificados con el test de Grubbs:\n",
            "[]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Con respecto a los resultados anteriores se puede concluir que ningun valor atipico fue encontrado.\n"
      ],
      "metadata": {
        "id": "32AVb_SxUsgE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bloque procesamieto"
      ],
      "metadata": {
        "id": "b1q9djK3966L"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "En este apartado se procede a determinar el mejor tipo de filtrado para los datos que se estan manejando y para la aplicacion, cabe destacar, que el resultado debe ser el mas preciso posible, ya que, es una aplicación medica. Se tomaron en consideracion dos tipos de filtrados, se muestran a continuacion en la matriz trade-off.\n",
        "\n",
        "\n",
        "| Criterio Técnico              | Media Móvil Simple (SMA) | Filtro de Kalman |\n",
        "|-------------------------------|--------------------------|------------------|\n",
        "| Facilidad de Implementación   | Alta                  | Baja          |\n",
        "| Efectividad en la Filtración | Media                 | Alta          |\n",
        "| Requerimientos de Recursos    | Bajos                 | Altos         |\n",
        "| Adaptabilidad a Cambios       | Baja                  | Alta          |\n",
        "| Complejidad de Entendimiento  | Baja                  | Alta          |\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "SgQ9OIcvcqL9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se escogio el filtro SMA como posible solucion, a continuación, crea la implementacion y se compara con los datos sin filtrar para visualizar su efectividad y cual tipo de filtro funciona mejor."
      ],
      "metadata": {
        "id": "sbr9RlDheOVb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import time\n",
        "\n",
        "# Leer el archivo de Excel\n",
        "ruta_archivo_excel = '/content/Dataset.xlsx'\n",
        "datos = pd.read_excel(ruta_archivo_excel)\n",
        "\n",
        "# Seleccionar la columna de interés\n",
        "columna = 'BPM'\n",
        "serie_temporal = datos[columna]\n",
        "\n",
        "# Calcular las medias móviles\n",
        "sma = serie_temporal.rolling(window=10).mean()  # SMA (Media Móvil Simple)\n",
        "ema = serie_temporal.ewm(span=10).mean()        # EMA (Media Móvil Exponencial)\n",
        "weights = np.arange(1, 11) / np.sum(np.arange(1, 11))\n",
        "wma = serie_temporal.rolling(window=10).apply(lambda x: np.dot(x, weights), raw=True) # WMA (Media Móvil Ponderada)\n",
        "\n",
        "# Graficar los datos originales y las medias móviles\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(serie_temporal, label='Datos Originales', color='black')\n",
        "plt.plot(sma, label='SMA (Media Móvil Simple)', linestyle='--', color='blue')\n",
        "plt.plot(ema, label='EMA (Media Móvil Exponencial)', linestyle='-.', color='green')\n",
        "plt.plot(wma, label='WMA (Media Móvil Ponderada)', linestyle=':', color='red')\n",
        "plt.title('Filtrado de Datos con Distintas Medias Móviles')\n",
        "plt.xlabel('Tiempo')\n",
        "plt.ylabel('Valor')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "#-------------------Tiempo de ejecucion de los filtros---------------------------------------------\n",
        "\n",
        "def filter_signal(data, filter_type='sma', window_size=10, repetitions=200):\n",
        "    \"\"\"\n",
        "    Función para filtrar una señal utilizando diferentes tipos de medias móviles y calcular el tiempo promedio.\n",
        "\n",
        "    Parámetros:\n",
        "    - data: Serie temporal de datos.\n",
        "    - filter_type: Tipo de filtro a utilizar ('sma' para Media Móvil Simple, 'ema' para Media Móvil Exponencial, 'wma' para Media Móvil Ponderada). Por defecto, 'sma'.\n",
        "    - window_size: Tamaño de la ventana para el filtro (solo aplica para SMA y WMA). Por defecto, 10.\n",
        "    - repetitions: Número de repeticiones para calcular el tiempo promedio. Por defecto, 200.\n",
        "\n",
        "    Retorna:\n",
        "    - elapsed_time_avg: Tiempo promedio transcurrido durante el filtrado en segundos.\n",
        "    \"\"\"\n",
        "    total_time = 0\n",
        "\n",
        "    for _ in range(repetitions):\n",
        "        start_time = time.time()\n",
        "\n",
        "        if filter_type == 'sma':\n",
        "            filtered_data = data.rolling(window=window_size).mean()\n",
        "        elif filter_type == 'ema':\n",
        "            filtered_data = data.ewm(span=window_size).mean()\n",
        "        elif filter_type == 'wma':\n",
        "            weights = np.arange(1, window_size + 1) / np.sum(np.arange(1, window_size + 1))\n",
        "            filtered_data = data.rolling(window=window_size).apply(lambda x: np.dot(x, weights), raw=True)\n",
        "        else:\n",
        "            raise ValueError(\"Tipo de filtro no válido. Use 'sma', 'ema' o 'wma'.\")\n",
        "\n",
        "        elapsed_time = time.time() - start_time\n",
        "        total_time += elapsed_time\n",
        "\n",
        "    elapsed_time_avg = total_time / repetitions\n",
        "\n",
        "    return elapsed_time_avg\n",
        "\n",
        "\n",
        "# Calcular el tiempo promedio de filtrado para Media Móvil Simple (SMA)\n",
        "sma_avg_time = filter_signal(datos, filter_type='sma')\n",
        "print(\"Tiempo promedio de filtrado para SMA:\", sma_avg_time, \"segundos\")\n",
        "\n",
        "# Calcular el tiempo promedio de filtrado para Media Móvil Exponencial (EMA)\n",
        "ema_avg_time = filter_signal(datos, filter_type='ema')\n",
        "print(\"Tiempo promedio de filtrado para EMA:\", ema_avg_time, \"segundos\")\n",
        "\n",
        "# Calcular el tiempo promedio de filtrado para Media Móvil Ponderada (WMA)\n",
        "wma_avg_time = filter_signal(datos, filter_type='wma')\n",
        "print(\"Tiempo promedio de filtrado para WMA:\", wma_avg_time, \"segundos\")\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "3NnsZCWkbMcW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 616
        },
        "outputId": "5be3a9a0-5f77-4c0f-f68c-083ae62f5701"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tiempo promedio de filtrado para SMA: 0.00031717777252197264 segundos\n",
            "Tiempo promedio de filtrado para EMA: 0.0002264237403869629 segundos\n",
            "Tiempo promedio de filtrado para WMA: 0.0006981062889099121 segundos\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "En los resultados del codigo anterior se puede apreciar como el metodo de WMA presenta una grafica mas cercana a la grafica original y los valores se ven bastantes suavizados, ademas el tiempo promedio de ejecucion del script que filtra los datos es de 661.88 micro segundos aproximandamente."
      ],
      "metadata": {
        "id": "1b_a1x5ahX5q"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Para poder pasar el filtro seleccionado al SoC nRF52832 es necesario seguir un proceso metodologico que se explica a continuacion.\n",
        "\n",
        "### Estrategia:\n",
        "\n",
        "1. **Comprender el Código Python:**\n",
        "   - Analizar y comprender completamente el filtro implementado en Python, incluyendo el algoritmo utilizado, las estructuras de datos involucradas y cualquier biblioteca externa utilizada.\n",
        "\n",
        "2. **Revisar y Adaptar las Bibliotecas:**\n",
        "   - Identificar las bibliotecas de Python utilizadas en el filtro y buscar alternativas en C++ que proporcionen funcionalidades similares.\n",
        "\n",
        "3. **Transcribir el Código a C++:**\n",
        "   - Transcribir el algoritmo del filtro a código C++. Asegurarse de mantener la lógica y la estructura del algoritmo, tener en cuenta las diferencias entre Python y C++, como la sintaxis, el manejo de tipos de datos y las funciones de biblioteca disponibles.\n",
        "\n",
        "4. **Optimizar el Código:**\n",
        "   - Optimizar el código C++ para el rendimiento y la eficiencia de memoria. .\n",
        "\n",
        "5. **Pruebas y Depuración:**\n",
        "   - Realizar pruebas exhaustivas en el código C++ para asegurarte de que funcione correctamente y produzca resultados similares a los del código Python original. Esto puede incluir pruebas unitarias, pruebas de integración y pruebas en el hardware objetivo (SoC nRF52832).\n",
        "\n",
        "6. **Integración con el Proyecto del SoC nRF52832:**\n",
        "   - Integrar el código del filtro C++ en el proyecto del SoC nRF52832, utilizando el SDK (Software Development Kit) y las herramientas de desarrollo proporcionadas por Nordic Semiconductor.\n",
        "\n",
        "El SDK (software developtment kit) proporcionado por Nordic semiconductor provee un ambiente de desarrollo con ejemplos, bibliotecas, protocoloes, compilers y todo lo necesario para poder adaptar el codigo python al microcontrolador objetivo."
      ],
      "metadata": {
        "id": "N_iD64qWngUJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### DSPs en el SoC 2RF52832: Arquitectura y Ventaja como Coprocesador\n",
        "\n",
        "#### Arquitectura de los DSPs:\n",
        "\n",
        "Los DSPs (Procesadores de Señal Digital) pueden tener diferentes arquitecturas dependiendo del fabricante y del modelo específico. Sin embargo, la mayoría de los DSPs comparten algunas características comunes en su arquitectura:\n",
        "\n",
        "1. **Pipeline Profundo:** Los DSPs suelen tener un pipeline profundo que permite la ejecución de múltiples instrucciones de manera simultánea y en paralelo.\n",
        "\n",
        "2. **Unidades de Procesamiento Especializadas:** Están diseñados para realizar operaciones matemáticas y de procesamiento de señales de manera eficiente, con unidades de procesamiento especializadas.\n",
        "\n",
        "3. **Memoria Especializada:** Integran memoria y periféricos específicos para el procesamiento de señales, como RAM y ROM optimizadas para estas operaciones.\n",
        "\n",
        "4. **Instrucciones SIMD:** Muchos DSPs soportan instrucciones SIMD que permiten realizar operaciones en paralelo en múltiples datos simultáneamente.\n",
        "\n",
        "#### Ventajas de usar DSPs como Coprocesador:\n",
        "\n",
        "1. **Eficiencia en Procesamiento de Señales:** Están diseñados específicamente para aplicaciones de procesamiento de señales, lo que los hace altamente eficientes en este tipo de tareas.\n",
        "\n",
        "2. **Rendimiento Optimizado:** La arquitectura especializada y el conjunto de instrucciones optimizado permiten un rendimiento superior en aplicaciones de procesamiento de señales.\n",
        "\n",
        "3. **Bajo Consumo de Energía:** Están optimizados para operaciones con bajo consumo de energía.\n",
        "\n",
        "4. **Programabilidad y Flexibilidad:** Aunque están diseñados para aplicaciones específicas, son programables y pueden adaptarse a una amplia gama de algoritmos y aplicaciones de procesamiento de señales.\n",
        "\n",
        "5. **Integración con otros Componentes del Sistema:** Se integran fácilmente con otros componentes del sistema, permitiendo diseñar sistemas complejos y eficientes.\n",
        "\n",
        "En resumen, los DSPs ofrecen una combinación única de rendimiento, eficiencia energética y flexibilidad que los hace ideales como coprocesadores para acelerar aplicaciones de procesamiento de señales en una variedad de dispositivos y sistemas."
      ],
      "metadata": {
        "id": "wJyFD2Z6roqe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bloque codificación"
      ],
      "metadata": {
        "id": "I0HN_ISA-bW_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "En este bloque se realizará la codificación de los datos provenientes del bloque de procesamiento, los datos filtrados serán codificados mediante codificación Hamming (7,4) y (15,11) esto para realizar la comparación respectiva y así ver cual funciona de mejor manera para este caso."
      ],
      "metadata": {
        "id": "h68tfE20Y2sv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import time\n",
        "\n",
        "\n",
        "# Extraer la columna relevante\n",
        "data = wma\n",
        "\n",
        "# Codificación Hamming (7,4)\n",
        "def hamming_encode_7_4(data):\n",
        "    # Inicializar lista para almacenar los bits codificados\n",
        "    encoded_data = []\n",
        "\n",
        "    # Calcular bits de paridad\n",
        "    p1 = (data[0] + data[1] + data[3]) % 2\n",
        "    p2 = (data[0] + data[2] + data[3]) % 2\n",
        "    p3 = (data[1] + data[2] + data[3]) % 2\n",
        "\n",
        "    # Insertar bits de paridad y datos en la lista de datos codificados\n",
        "    encoded_data.extend([p1, p2, data[0], p3, data[1], data[2], data[3]])\n",
        "\n",
        "    return encoded_data\n",
        "#Codificación Hamming (15,11)\n",
        "\n",
        "def hamming_encode_15_11(data):\n",
        "    # Inicializar lista para almacenar los bits codificados\n",
        "    encoded_data = []\n",
        "\n",
        "    # Calculando los bits de paridad (p1-p4)\n",
        "    p1 = (data[0] + data[1] + data[3] + data[4] + data[6] + data[8] + data[10]) % 2\n",
        "    p2 = (data[0] + data[2] + data[3] + data[5] + data[6] + data[9] + data[10]) % 2\n",
        "    p3 = (data[1] + data[2] + data[3] + data[7] + data[8] + data[9] + data[10]) % 2\n",
        "    p4 = (data[4] + data[5] + data[6] + data[7] + data[8] + data[9] + data[10]) % 2\n",
        "\n",
        "    # Insertar bits de paridad y datos en la lista de datos codificados\n",
        "    encoded_data.extend([p1, p2, data[0], p3, data[1], data[2], data[3], p4, data[4], data[5], data[6], data[7], data[8], data[9], data[10]])\n",
        "\n",
        "    return encoded_data\n",
        "\n",
        "def measure_hamming_encoding_time(data, encoding_function, repetitions=200):\n",
        "    total_time = 0\n",
        "\n",
        "    for _ in range(repetitions):\n",
        "        start_time = time.time()\n",
        "\n",
        "        # Aplicar la codificación de Hamming\n",
        "        encoded_data = [encoding_function([int(bit) for bit in bin(int(dato) if not np.isnan(dato) else 0)[2:].zfill(4 if encoding_function == hamming_encode_7_4 else 11)]) for dato in data]\n",
        "        elapsed_time = time.time() - start_time\n",
        "        total_time += elapsed_time\n",
        "\n",
        "    elapsed_time_avg = total_time / repetitions\n",
        "\n",
        "    return elapsed_time_avg\n",
        "\n",
        "# Medir el tiempo de codificación para Hamming (7,4)\n",
        "hamming_avg_time_7_4 = measure_hamming_encoding_time(data, hamming_encode_7_4)\n",
        "print(\"Tiempo promedio de codificación de Hamming (7,4):\", hamming_avg_time_7_4, \"segundos\")\n",
        "\n",
        "# Medir el tiempo de codificación para Hamming (15,11)\n",
        "hamming_avg_time_15_11 = measure_hamming_encoding_time(data, hamming_encode_15_11)\n",
        "print(\"Tiempo promedio de codificación de Hamming (15,11):\", hamming_avg_time_15_11, \"segundos\")\n",
        "\n",
        "# Codificar los datos BPM usando el código de Hamming (7,4)\n",
        "datos_codificados_7_4 = [hamming_encode_7_4([int(bit) for bit in bin(int(dato) if not np.isnan(dato) else 0)[2:].zfill(4)]) for dato in data]\n",
        "\n",
        "# Crear un DataFrame con los datos originales de BPM y los datos codificados\n",
        "df_resultado_7_4 = pd.DataFrame({'BPM': data, 'BPM Codificado': datos_codificados_7_4})\n",
        "\n",
        "# Codificar los datos BPM usando el código de Hamming (15,11)\n",
        "datos_codificados_15_11 = [hamming_encode_15_11([int(bit) for bit in bin(int(dato) if not np.isnan(dato) else 0)[2:].zfill(11)]) for dato in data]\n",
        "# Crear un DataFrame con los datos originales de BPM y los datos codificados\n",
        "df_resultado_15_11 = pd.DataFrame({'BPM': data, 'BPM Codificado': datos_codificados_15_11})\n",
        "\n",
        "# Imprimir los resultados\n",
        "print (\"Codificación con Hamming (7,4)\")\n",
        "print(df_resultado_7_4)\n",
        "print (\"Codificación con Hamming (15,11)\")\n",
        "print(df_resultado_15_11)"
      ],
      "metadata": {
        "id": "-PJjIxNJND1E",
        "outputId": "ec7450a9-2584-4906-9c9e-a2e3a1fcd502",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tiempo promedio de codificación de Hamming (7,4): 0.00047469139099121094 segundos\n",
            "Tiempo promedio de codificación de Hamming (15,11): 0.000679086446762085 segundos\n",
            "Codificación con Hamming (7,4)\n",
            "            BPM         BPM Codificado\n",
            "0           NaN  [0, 0, 0, 0, 0, 0, 0]\n",
            "1           NaN  [0, 0, 0, 0, 0, 0, 0]\n",
            "2           NaN  [0, 0, 0, 0, 0, 0, 0]\n",
            "3           NaN  [0, 0, 0, 0, 0, 0, 0]\n",
            "4           NaN  [0, 0, 0, 0, 0, 0, 0]\n",
            "..          ...                    ...\n",
            "122  128.315293  [1, 1, 1, 0, 0, 0, 0]\n",
            "123  127.718945  [1, 1, 1, 1, 1, 1, 1]\n",
            "124  127.134278  [1, 1, 1, 1, 1, 1, 1]\n",
            "125  126.464762  [1, 1, 1, 1, 1, 1, 1]\n",
            "126  125.826872  [1, 1, 1, 1, 1, 1, 1]\n",
            "\n",
            "[127 rows x 2 columns]\n",
            "Codificación con Hamming (15,11)\n",
            "            BPM                                 BPM Codificado\n",
            "0           NaN  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "1           NaN  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "2           NaN  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "3           NaN  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "4           NaN  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "..          ...                                            ...\n",
            "122  128.315293  [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "123  127.718945  [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]\n",
            "124  127.134278  [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]\n",
            "125  126.464762  [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0]\n",
            "126  125.826872  [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1]\n",
            "\n",
            "[127 rows x 2 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Con los resultados de la codificación con ambos tipos se realizó una comparación para ver las desventajas y las ventajas de cada uno.\n",
        "\n",
        "|  Hamming (7,4)  |  Hamming (15,11)  |\n",
        "|  -------------  |  ---------------  |\n",
        "|  Agrega menos bits ya que agrega únicamente 3 a los 4 iniciales por lo que requiere un ancho de banda menor  |  Agrega más bits ya que a los 11 iniciales se les agrega 4 más por lo tanto necesita un ancho de banda mayor |  \n",
        "|  Tiene una estructura más simple por lo que es más fácil de implementar y a su vez de entender  |  Tiene una estructura mucho más compleja por lo que es más difícil de implementar y de entender  |  \n",
        "|  Tiene una menor capacidad para detectar y corregir errores esto ya que puede hacerlo solo con un error de bit  |  Es capaz de detectar y corregir errores en múltiples bits ya que tiene mayor número de bits de paridad  |\n",
        "|  No es tan fiable ya que solo es capaz de corregir un error en un solo bit  |  Es más fiable ya que es capaz de detectar y corregir más errores  |\n",
        "|  Tiene un tiempo de ejecución mucho más bajo  |  Tiene un tiempo de ejecución más alto  |\n",
        "\n",
        "Por lo tanto según lo que se desee es mejor usar uno u otro ya que si se tiene un ancho de banda menor y la fiabilidad no debe ser muy alta es mejor el código (7,4) y si es más importante la fiabilidad que el ancho de banda que ocupa, y el tiempo que tarda en ejecutarse es mejor el código Hamming (15,11)\n",
        "\n",
        "### Coprocesador DSP del SoC nRF52832 ventajas y desventajas con respectoa a la codificación\n",
        "\n",
        "Se deben tomar ciertas cosas en consideración antes de tomar la decisión de si es mejor o si no el uso del coprocesador DSP para acelerar el proceso de la codificación estos aspectos son los siguientes:\n",
        "\n",
        "\n",
        "- Rendimiento de cálculo: Los coprocesadores DSP están diseñados más específicamente para realizar operaciones matemáticas y aritméticas de una forma más eficiente, lo que puede mejorar el rendimiento almpararlo con la ejecución en el procesador principal. Si el proceso de codificación de Hamming involucra una gran cantidad de cálcuos, como operaciones de suma, multiplicación y comparación, es probable que un coprocesador DSP pueda acelerar el proceso.\n",
        "\n",
        "- Disponibilidad y capacidad del coprocesador DSP: Es importante verificar si este coprocesador es capaz de ejecutar las operaciones necesarias para la codificación de Hamming de manera eficiente. Además de la capacidad de procesamiento del coprocesador DSP y la compatibilidad con las operaciones requeridas.\n",
        "\n",
        "- Uso de recursos y energía: Se debe tamar en cuenta también el consumo de recursos y energía con el DSP en comparación con la ejecución en el procesador principal. Esto ya que es para garantizar que no se comprometan otros aspectos del sistema.\n",
        "\n",
        "Por lo tanto dependiendo del código Hamming que se desee utilizar es mejor o no implementar este coprocesador, en el caso de que se escoja el hamming (7,4) no sería tan necesario ya que los cálculos involucrados son bastante simples por lo que no hace tanta falta ya que se puede ejecutar bien en el procesador principal, ahoora si se usa el hamming (15,11) este al ser mucho más grande y complejo si requiere operaciones matemáticas mucho más complejas por lo que para este si es necesario este coprocesador DSP ya que ayudaría en gran manera a aumentar el rendimiento, y en este caso como se dicutió anteriormente al ser datos médicos se prefiere la fiabilidad del hamming (15,11) por lo tanto si es mejor implementar el coprocesador."
      ],
      "metadata": {
        "id": "eEmCBNadvVa0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Bloque modulación\n"
      ],
      "metadata": {
        "id": "-PE2aIpP_dZC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bloque antena"
      ],
      "metadata": {
        "id": "nlobC92s_pHI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Requerimiento del canal"
      ],
      "metadata": {
        "id": "0g3eibXE_vae"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Bloque del canal"
      ],
      "metadata": {
        "id": "k-At2sq0_1Fi"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Requerimiento para el módulo Receptor (RX)"
      ],
      "metadata": {
        "id": "-PnHyLG__5Wp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bloque demodulador"
      ],
      "metadata": {
        "id": "zpFXkvNRAAZ1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bloque decodificador"
      ],
      "metadata": {
        "id": "kFtygk3-AFHY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bloque visualización"
      ],
      "metadata": {
        "id": "qSxnirI_AIFQ"
      }
    }
  ]
}